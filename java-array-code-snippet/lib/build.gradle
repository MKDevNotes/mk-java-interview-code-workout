/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

/*
task createTestForSource {
    inputs.dir 'src/main/java'
    outputs.dir 'src/test/java'

    doLast {
        fileTree('src/main/java').visit { FileVisitDetails fvd ->
            if (!fvd.directory) {
                String sourcePath = fvd.relativePath.asPath
                String testPath = sourcePath.replace('.java', 'Test.java')
                File testFile = file("src/test/java/$testPath")
                if (!testFile.exists()) {
                    testFile.parentFile.mkdirs()
                    testFile.text = // do your magic here
                }
            }
        }
    }
}
*/

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

apply plugin: 'java'
sourceCompatibility = 1.8
targetCompatibility = 1.8
